Slip transmission parameters implemented in the Matlab Toolbox
==============================================================
..    include:: <isonum.txt>
.. csv-table::
   :header: "Slip transmission parameter", "Function", "Matlab function"
   :widths: 40, 40, 20

   "Misorientation angle (:math:`\omega`)", ":math:`\omega = cos^{-1}((tr(\Delta g)-1)/2)`", `misorientation.m <../../../crystallo/misorientation.m>`_
   ":math:`N` factor from Livingston and Chamlers", ":math:`N = \cos(\psi)\cdot\cos(\kappa) + \cos(\gamma)\cdot\cos(\delta)`", `N_factor.m <../../../slip_transfer/N_factor.m>`_
   ":math:`LRB` factor from Shen et al.", ":math:`LRB = \cos(\theta)\cdot\cos(\kappa)`", `LRB_parameter.m <../../../slip_transfer/LRB_parameter.m>`_
   ":math:`m'` parameter from Luster and Morris", ":math:`m' = \cos(\psi)\cdot\cos(\kappa)`", `mprime.m <../../../slip_transfer/mprime.m>`_
   "Residual Burgers vector (:math:`\vec b_r`)", ":math:`\vec b_r = g_{in}\cdot\vec b_{in} - g_{out}\cdot\vec b_{out}`", `residual_Burgers_vector.m <../../../slip_transfer/residual_Burgers_vector.m>`_
   "Resolved Shear Stress (:math:`\tau^{i}`) / Schmid Factor", ":math:`\tau^{i} = \sga : {S_0}^{i}` and :math:`\tau^{i} = \sga : {S_0}^{i}`", `resolved_shear_stress.m <../../../crystal_plasticity/resolved_shear_stress.m>`_
   "Grain boundary Schmid factor", ":math:`m_{GB} = m_{in} + m_{out}`", `resolved_shear_stress.m <../../../crystal_plasticity/resolved_shear_stress.m>`_
   "Generalized Schmid Factor (:math:`GSF`)", ":math:`GSF = d \cdot g \sga g^T \cdot n^T`", `generalized_schmid_factor.m <../../../crystal_plasticity/generalized_schmid_factor.m>`_
   
.. Another way to do table.

.. .. tabularcolumns:: |l|c|p{10cm}|

.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | Slip transmission parameter                                       | Function                                                                        | Matlab function                                                                           |
.. +===================================================================+=================================================================================+===========================================================================================+
.. | Misorientation angle (:math:`\omega`)                             | :math:`\omega = cos^{-1}((tr(\Delta g)-1)/2)`                                        | `misorientation.m <../../../crystallo/misorientation.m>`_                                 |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | :math:`N` factor from Livingston and Chamlers                     | :math:`N = \cos(\psi)\cdot\cos(\kappa) + \cos(\gamma)\cdot\cos(\delta)`         | `N_factor.m <../../../slip_transfer/N_factor.m>`_                                         |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | :math:`LRB` factor from Shen et al.                               | :math:`LRB = \cos(\theta)\cdot\cos(\kappa)`                                     |  `LRB_parameter.m <../../../slip_transfer/LRB_parameter.m>`_                              |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | :math:`m'` parameter from Luster and Morris                       | :math:`m' = \cos(\psi)\cdot\cos(\kappa)`                                        |  `mprime.m <../../../slip_transfer/mprime.m>`_                                            |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | Residual Burgers vector (:math:`\vec b_r`)                        | :math:`\vec b_r = g_{in}\cdot\vec b_{in} - g_{out}\cdot\vec b_{out}`            |  `residual_Burgers_vector.m <../../../slip_transfer/residual_Burgers_vector.m>`_          |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | Resolved Shear Stress (:math:`\tau^{i}`) / Schmid Factor          | :math:`\tau^{i} = \sga : {S_0}^{i}` and :math:`\tau^{i} = \sga : {S_0}^{i}` |  `resolved_shear_stress.m <../../../crystal_plasticity/resolved_shear_stress.m>`_         |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | Grain boundary Schmid factor                                      | :math:`m_{GB} = m_{in} + m_{out}`                                               |  `resolved_shear_stress.m <../../../crystal_plasticity/resolved_shear_stress.m>`_         |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+
.. | Generalized Schmid Factor (:math:`GSF`)                           | :math:`GSF = d \cdot g \sga g^T \cdot n^T`                                    |  `generalized_schmid_factor.m <../../../crystal_plasticity/generalized_schmid_factor.m>`_ |
.. +-------------------------------------------------------------------+---------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------+

.. Another way to do table.

.. ========================================================   ===============================================================================   =========================================================================================
.. Slip transmission parameter                                Function                                                                          Matlab function                                          
.. ========================================================   ===============================================================================   =========================================================================================
.. Misorientation angle (:math:`\omega`)                      :math:`\omega = cos^{-1}((tr(\Delta g)-1)/2)`                                          `misorientation.m <../../../crystallo/misorientation.m>`_
.. :math:`N` factor from Livingston and Chamlers              :math:`N = \cos(\psi)\cdot\cos(\kappa) + \cos(\gamma)\cdot\cos(\delta)`           `N_factor.m <../../../slip_transfer/N_factor.m>`_
.. :math:`LRB` factor from Shen et al.                        :math:`LRB = \cos(\theta)\cdot\cos(\kappa)`                                       `LRB_parameter.m <../../../slip_transfer/LRB_parameter.m>`_
.. :math:`m'` parameter from Luster and Morris                :math:`m' = \cos(\psi)\cdot\cos(\kappa)`                                          `mprime.m <../../../slip_transfer/mprime.m>`_
.. Residual Burgers vector (:math:`\vec b_r`)                 :math:`\vec b_r = g_{in}\cdot\vec b_{in} - g_{out}\cdot\vec b_{out}`              `residual_Burgers_vector.m <../../../slip_transfer/residual_Burgers_vector.m>`_
.. Resolved Shear Stress (:math:`\tau^{i}`) / Schmid Factor   :math:`\tau^{i} = \sga : {S_0}^{i}` and :math:`\tau^{i} = \sga : {S_0}^{i}`   `resolved_shear_stress.m <../../../crystal_plasticity/resolved_shear_stress.m>`_
.. Grain boundary Schmid factor                               :math:`m_{GB} = m_{in} + m_{out}`                                                 `resolved_shear_stress.m <../../../crystal_plasticity/resolved_shear_stress.m>`_
.. Generalized Schmid Factor (:math:`GSF`)                    :math:`GSF = d \cdot g \sga g^T \cdot n^T`                                      `generalized_schmid_factor.m <../../../crystal_plasticity/generalized_schmid_factor.m>`_
.. ========================================================   ===============================================================================   =========================================================================================

