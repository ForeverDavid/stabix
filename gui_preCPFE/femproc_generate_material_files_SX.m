% Copyright 2013 Max-Planck-Institut für Eisenforschung GmbH
function femproc_generate_material_files_SX(CPFEM_code)
%% Generation of material config file (GENMAT OR DAMASK) for SX indentation
% CPFEM_code: GENMAT or DAMASK

% authors: d.mercier@mpie.de / c.zambaldi@mpie.de

if nargin == 0
   CPFEM_code = 'DAMASK'; 
end

gui_SX = guidata(gcf);

%% Material config file for GENMAT
if strcmp(CPFEM_code, 'GENMAT') == 1
    %% Creation of the material.mpie file with Euler angles (for GENMAT)
    % Add no comment in the material.mpie file !!! ==> Error
    % You have to remove the end of the name of the material file in order to set the
    % name of this file as "material.mpie"...(only for GENMAT)
    
    fid = fopen(fullfile(gui_SX.path_config_file, 'material.mpie'), 'w+');
    fprintf(fid, 'material.mpie, generated by %s.m for indent %s\n', mfilename, gui_SX.GB.Titlegbdatacompl);
    fprintf(fid, '1,1,18\n');
    fprintf(fid, '#1 Data for Grain %s\n', num2str(gui_SX.GB.activeGrain));
    fprintf(fid, '6, 6, 18, 1, 0 \n');
    fprintf(fid, '1, %s, %s, %s, 0, 0.50, 1\n', num2str(gui_SX.GB.activeGrain_eul(1)), num2str(gui_SX.GB.activeGrain_eul(2)), num2str(gui_SX.GB.activeGrain_eul(3)));
    fclose(fid);
    
    %% Copy material_<structure>.mpie (for GENMAT)
    genmat = struct();
    genmat.material_fname = struct;
    genmat.material_fname.fcc = 'material_fcc.mpie';
    genmat.material_fname.bcc = 'material_bcc.mpie';
    genmat.material_fname.hcp = 'material_hcp.mpie';
    genmat.material_dir = fullfile(getenv('SLIP_TRANSFER_TBX_ROOT'),'gui_preCPFE','genmat','');
    fnameA = fullfile(genmat.material_dir, genmat.material_fname.(gui_SX.GB.Phase_A));
    copyfile(fnameA, gui_SX.path_config_file)
    fnameB = fullfile(genmat.material_dir, genmat.material_fname.(gui_SX.GB.Phase_B));
    copyfile(fnameB, gui_SX.path_config_file)
    
    %% Material config file for DAMASK
elseif strcmp(CPFEM_code, 'DAMASK') == 1
    %% Creation of the material.config file with Euler angles (for DAMASK)
    scriptname_DAMASK_materialconfig = sprintf('%s_DAMASK_materialconfig.py', gui_SX.GB.Titlegbdatacompl);
    damask_python_path = strrep(fullfile(gui_SX.config_CPFEM.python4fem_module_path, 'damask'), '\', '\\');
    
    fid = fopen(scriptname_DAMASK_materialconfig,'w+');
    fprintf(fid, '# Generated by femproc_generate_material_files.m --- DO NOT EDIT\n');
    fprintf(fid, 'import sys\n');
    fprintf(fid, 'p=''%s'' \n', gui_SX.config_CPFEM.python4fem_module_path);
    fprintf(fid, 'if p not in sys.path: sys.path.insert(0, p) \n');
    fprintf(fid, 'p=''%s'' \n', damask_python_path);
    fprintf(fid, 'if p not in sys.path: sys.path.insert(0, p) \n');
    fprintf(fid, 'import scipy.io\n');
    fprintf(fid, 'gb_data = scipy.io.loadmat(''%s'')\n', gui_SX.GB.Titlegbdata);
    fprintf(fid, 'import generate_material_config_file as damask_mat\n');
    fprintf(fid, 'damask_mat.mat_config(gb_data, proc_path=r''%s'')\n', fullfile(gui_SX.config_CPFEM.proc_file_path, gui_SX.GB.Titlegbdata));
    fclose(fid);
    % execute the python code that we have just generated
    cmd = sprintf('%s %s', gui_SX.config_CPFEM.python_executable, fullfile(pwd, scriptname_DAMASK_materialconfig));
    commandwindow;
    system(cmd);
    
    try
        movefile(scriptname_DAMASK_materialconfig, gui_SX.path_config_file);
    catch err
        %errordlg(err.message);
        warning(err.message);
    end
    
    %% Move of material.config in the corresponding modeling folder (for DAMASK)
    try
        movefile('material.config', gui_SX.path_config_file);
    catch err
        %errordlg(err.message);
        warning(err.message);
    end
    
end

guidata(gcf, gui_SX);

end
